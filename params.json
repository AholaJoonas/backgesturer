{"name":"Backgesturer","tagline":"iOS-styles back-gestures to elements","body":"#backgesturer\r\n\r\n\r\niOS-styled back-gestures to elements, aimed for webapps\r\n\r\nUsage:\r\n\r\n    new backGesturer( (<DOM nodelist> || css-selector), paramsObject{})\r\n\r\n\texample:\r\n\tvar backgest = new backGesturer(\".back-gesturized\", {\r\n\t\tbttn1Callback: function(evt) {alert(\"I'm button 1 and this is my favourite button in the citadel\")},\r\n\t\tbttn2Callback: function(evt) {alert(\"I'm button 2 and this is my favourite button in the citadel\")}\r\n\t});\t\r\n    \r\nPossible values for the paramsObject:\r\n\r\n1. \"button1Callback\" && \"button2Callback\" : function - _required_ \r\n   > callback-functions for when pressing the buttons, they receive the event as a parameter and their context is the DOM-node of the pressed button.\r\n\r\n2. \"button1Text\" && \"button2Text\": string - _required if you are generating the buttons with backGesturer_\r\n    >Text-labels for the buttons, the string is wrapped in a span-element, can be HTML.\r\n\r\n3. \"hwAcceleration\": true || false,  _default: true_\r\n    > If you set this to false, The CSS-property \"left\" will be used instead of detecting transitions.\r\n    > If you're on a browser that doesn't support transitions, left will also be used\r\n    \r\n    ##Info\r\n    For best performance, use the following structure in the elements you use backgesture on:\r\n\r\n        wrapper\r\n            .backgesture-content-wrapper (contains the actual visible content of the element)\r\n            .backgesture-button-wrapper\r\n                .backgesture-button.backgesture-button1\r\n                    span \"buttontitle\"\r\n                .backgesture-button..backgesture-button2\r\n                    span \"buttontitle\r\n                    \r\n        for example:\r\n        <li class=\"back-gesturized\">\r\n\t\t    <div class=\"backgesture-content-wrapper\">\r\n                Lorem ipsum asd asd\r\n            </div>\r\n\t\t\t<div class=\"backgesture-button-wrapper\">\r\n                <div class=\"backgesture-button backgesture-button1\">\r\n                    <span>Button 1</span>\r\n                </div>\r\n                <div class=\"backgesture-button2 backgesture-button\">\r\n                    <span>Delete</span>\r\n                </div>\r\n            </div>\r\n\t\t</li>\r\n\r\nIn case you use backgesturer on an element with no .backgesture-content-wrapper or .backgesture-button-wrapper, it will be generated, but the performance will be poor. Especially in a large node-collection.\r\n\r\n##Browser support\r\nShould work on all modern browsers, but please note that I made this primarily for mobile-webapps.\r\n###Tested on\r\n\r\n1. iPad 3 and iPhone 5 with iOS 7\r\n2. latest Chrome, 30.0\r\n3. Latest Firefox, 24.0\r\n4. Opera 12.16 and 17.0\r\n5. IE 9, but has some minor bugs, like buttons not always working\r\n\r\n##TODO:\r\n1. Solve the context-problem (More than one instance of backgesturer --> explosions)\r\n2. Move all the styles to the JS so no additional CSS-files required (necessary?)\r\n3. Improve the code-quality...\r\n    \r\n    \r\n    \r\n    \r\n    \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}